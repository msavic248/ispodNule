---
import { Icon } from 'astro-icon/components'

const navLinks = [
    { href: '/', text: 'Services' },
    { href: '/', text: 'Projects' },
    { href: '/', text: 'About' },
    { href: '/', text: 'Sponsors' },
    { href: '/', text: 'Contact' }
];
---

<script>
    import gsap from '../utils/gsap.js';

    const themeToggle = document.getElementById('theme-toggle');
    const lightIcon = document.querySelector('.theme-icon[data-mode="light"]');
    const darkIcon = document.querySelector('.theme-icon[data-mode="dark"]');
    
    type ThemeType = 'dark' | 'light';

    const getThemePreference = (): ThemeType => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
            const savedTheme = localStorage.getItem('theme');
            return (savedTheme === 'dark' || savedTheme === 'light') ? savedTheme : 'light';
        }
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
    };
    
    const applyTheme = (theme: ThemeType): void => {
        if (theme === 'dark') {
            document.documentElement.classList.add('dark');
            lightIcon?.classList.add('hidden');
            darkIcon?.classList.remove('hidden');
        } else {
            document.documentElement.classList.remove('dark');
            lightIcon?.classList.remove('hidden');
            darkIcon?.classList.add('hidden');
        }
        if (typeof localStorage !== 'undefined') {
            localStorage.setItem('theme', theme);
        }
    };

    // Initial theme setup
    const initialTheme = getThemePreference();
    applyTheme(initialTheme);
    
    themeToggle?.addEventListener('click', () => {
        const isDark = document.documentElement.classList.contains('dark');
        const newThemeToApply = isDark ? 'light' : 'dark';
        applyTheme(newThemeToApply);
    });

    // Existing scroll behavior for header
    let lastScrollY = window.scrollY;
    const header = document.getElementById('site-header');
    const handleScroll = () => {
        const currentScrollY = window.scrollY;
        if (Math.abs(currentScrollY - lastScrollY) < 5) return;
        if (currentScrollY > lastScrollY && currentScrollY > 50) {
            gsap.to(header, { opacity: 0, y: '-100%', duration: 0.2, ease: 'power1.in' });
        } else {
            gsap.to(header, { opacity: 1, y: '0%', duration: 0.2, ease: 'power1.in' });
        }
        lastScrollY = currentScrollY;
    };
    let scrollTimeout: number | undefined;
    window.addEventListener('scroll', () => {
        if (scrollTimeout) {
            window.cancelAnimationFrame(scrollTimeout);
        }
        scrollTimeout = window.requestAnimationFrame(handleScroll);
    }, { passive: true });

    // Mobile menu toggle script
    document.addEventListener('DOMContentLoaded', () => {
        const mobileMenuButton = document.getElementById('mobile-menu-trigger');
        const mobileMenuPanel = document.getElementById('mobile-menu-panel');

        mobileMenuButton?.addEventListener('click', () => {
            const isExpanded = mobileMenuButton.getAttribute('aria-expanded') === 'true' || false;
            mobileMenuButton.setAttribute('aria-expanded', (!isExpanded).toString());
            mobileMenuPanel?.classList.toggle('hidden');
        });
    });
</script>

<header id="site-header" class="fixed w-full top-0 z-50 bg-ispod-white dark:bg-black shadow-md transition-all duration-300 ease-in-out">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex items-center justify-between h-16">
            <div class="flex items-center">
                <a href="/" class="flex-shrink-0">
                    <img class="h-14 w-auto" src="/ispodNuleLogo.png" alt="IspodNule Logo">
                </a>
            </div>

            <nav class="hidden md:flex items-center space-x-1">
                {navLinks.map(link => (
                    <a
                        href={link.href}
                        class="text-ispod-jet dark:text-ispod-white hover:text-ispod-blue dark:hover:text-ispod-yellow px-3 py-2 rounded-md text-lg font-medium transition-colors duration-150 ease-in-out"
                    >
                        {link.text}
                    </a>
                ))}
            </nav>

            <div class="flex items-center">
                <button id="theme-toggle" class="text-ispod-jet dark:text-ispod-white hover:text-ispod-yellow dark:hover:text-ispod-blue p-2 rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-ispod-white dark:focus:ring-offset-ispod-jet focus:ring-ispod-yellow dark:focus:ring-ispod-blue transition-colors duration-150 ease-in-out">
                    <span class="sr-only">Toggle theme</span>
                    <Icon name="line-md:sunny" class="theme-icon h-6 w-6" data-mode="light" />
                    <Icon name="line-md:moon" class="theme-icon hidden h-6 w-6" data-mode="dark" />
                </button>

                <div class="md:hidden ml-2">
                    <button type="button" id="mobile-menu-trigger" class="text-ispod-jet dark:text-ispod-white hover:text-ispod-blue dark:hover:text-ispod-yellow p-2 rounded-md inline-flex items-center justify-center focus:outline-none focus:ring-2 focus:ring-inset focus:ring-ispod-blue dark:focus:ring-ispod-yellow cursor-pointer" aria-controls="mobile-menu-panel" aria-expanded="false">
                        <span class="sr-only">Open main menu</span>
                        <Icon name="mdi:menu" class="h-6 w-6" aria-hidden="true" />
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="hidden md:hidden bg-ispod-white dark:bg-ispod-jet" id="mobile-menu-panel">
        <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3">
            {navLinks.map(link => (
                <a
                    href={link.href}
                    class="block text-ispod-jet dark:text-ispod-white hover:text-ispod-blue dark:hover:text-ispod-yellow hover:bg-ispod-jet/10 dark:hover:bg-ispod-white/10 px-3 py-2 rounded-md text-base font-medium transition-colors duration-150 ease-in-out"
                >
                    {link.text}
                </a>
            ))}
        </div>
    </div>
</header>

<style>
/* Minimal style to ensure body transition is smooth if not already handled by global styles */
/* body {
    transition: background-color 0.4s ease-in-out, color 0.4s ease-in-out; 
} */
</style>