---
import { Icon } from 'astro-icon/components'

const navLinks = [
    { href: '/', text: 'Services' },
    { href: '/', text: 'Projects' },
    { href: '/', text: 'Contact' }
];
---

<script>
    // Theme toggle logic
    const themeToggle = document.getElementById('theme-toggle');
    const lightIcon = document.querySelector('.theme-icon[data-mode="light"]');
    const darkIcon = document.querySelector('.theme-icon[data-mode="dark"]');
    
    type ThemeType = 'dark' | 'light';

    // Check for saved theme preference or use the system preference
    const getThemePreference = (): ThemeType => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
            const savedTheme = localStorage.getItem('theme');
            // Make sure it's a valid theme
            return (savedTheme === 'dark' || savedTheme === 'light') ? savedTheme : 'light';
        }

        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
    };
    
    const applyTheme = (theme: ThemeType): void => {
        if (theme === 'dark') {
            document.documentElement.classList.add('dark');
            lightIcon?.classList.add('hidden');
            darkIcon?.classList.remove('hidden');
        } else {
            document.documentElement.classList.remove('dark');
            lightIcon?.classList.remove('hidden');
            darkIcon?.classList.add('hidden');
        }
        
        localStorage.setItem('theme', theme);
        document.documentElement.classList.contains('dark') ? 'dark' : 'light';
    };
    
    // Initial theme setup
    applyTheme(getThemePreference());
    
    // Toggle theme on button click
    themeToggle?.addEventListener('click', () => {
        const isDark = document.documentElement.classList.contains('dark');
        const newTheme = isDark ? 'light' : 'dark';
        
        applyTheme(newTheme);
    });
</script>

<header id="site-header" class="fixed w-full px-4 sm:px-6 lg:px-8 top-0 z-50 transition-all duration-300 ease-in-out">
    <div class="flex h-25 max-w-7xl mt-4 mx-auto">
        <nav class="bg-ispod-white/50 dark:bg-ispod-jet/50 backdrop-blur-sm flex items-center justify-between space-x-4 w-full border-b-2 rounded-3xl shadow my-2 px-4">
            <a href="/" class="">
                <img class="h-25 w-auto aspect-square object-contain" src="/ispodNuleLogo.png" alt="Logo">
            </a>

            <div class="flex space-x-4">
                {navLinks.map(link => (
                    <a 
                    href={link.href} 
                    class="text-ispod-jet hover:text-ispod-yellow dark:text-ispod-white dark:hover:text-ispod-blue px-3 py-2 transition duration-150 ease-in-out"
                    >
                    {link.text}
                    </a>
                ))}
            </div>

            <div class="flex space-x-4">
                <button id="theme-toggle" class="text-ispod-jet dark:text-ispod-white hover:text-ispod-jet hover:bg-ispod-yellow hover:dark:bg-ispod-blue px-3 py-2 rounded-lg transition duration-150 ease-in-out cursor-pointer">
                    <Icon name="line-md:sunny" class="theme-icon" size="24" data-mode="light" /> 
                    <Icon name="line-md:moon" class="theme-icon hidden" size="24" data-mode="dark" />
                </button>
            </div>
        </nav>
    </div>
</header>
